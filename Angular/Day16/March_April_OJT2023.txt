Last Lecture
1 Service
	- It is simple class 
	- It is used to write a BL 
	- It is provide isolation to ur component
	- it is used for code resualbilty
	- it is used for code maintability
	- to connect ur backend server 
	export class CourseService{
		private course:string[]=[...];
		
		getCourse(){
			return this.course;
		}
	}
	
	course.ts
	mycourse:string[]=[];
	constructor(private service:CourseService){
		//let service=new CourseService();
		this.mycourse=service.getCourse()
	}
	
	ngOninit(){
	this.mycourse=this.service.getCourse()
	}
	
	app.module.ts 
	providers:[CourseService]
	
2 Dependancy Injection
3 HTTP 
	- it is Stateless Protocol
4 HTTP Methods 
	1 get => get/fetch data from backend server 
	2 post => to send a data from frontend server to backend server 
	3 put => to update a particular data 
	4 delete => to delete a particular data

5 Http Request / Http Response 
	
 Http Request
	It has 2 part 
	1 Http header
		- IP 
		- Method name 
		- date & time 
		- content Type 
			- image
			- application/json
			- file/pdf
			- text/html
		- Auth token 
		- url 
	
	2 Http Body 
		- Data 
		 - xml data 
		 - json data 
		 - text/html 
	
	Http Response
	It has 2 part 
	1 Http header
		- IP 
		- Method name 
		- date & time 
		- content Type 
			- image
			- application/json
			- file/pdf
			- text/html
		- Auth token 
		- url 
		- Status 
			1 200 => Success, ok => 200-299
			2 300 => Redirection => 300-399
			3 400 => client side Resourse not .. => 400-499
			4 500 => serve side => 500-599
	2 Http Body 
		- Data 
		 - xml data 
		 - json data 
		 - text/html 


Today Lecture
1 http://jsonplaceholder.typicode.com/posts
	- It is a fake service 
		if u send data/ uodate/ delete data it will not store in db but it gives a response of ur request.		
		
2 HttpClientModule
	app.module.ts 
	import : 
3 get method
4 @Injectable
5 Observable
 


 

 































